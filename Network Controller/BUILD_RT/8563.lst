C51 COMPILER V9.06   8563                                                                  03/13/2013 09:32:25 PAGE 1   


C51 COMPILER V9.06, COMPILATION OF MODULE 8563
OBJECT MODULE PLACED IN .\8563.obj
COMPILER INVOKED BY: d:\Keil_4_9.06\C51\BIN\C51.EXE ..\src\i2c\8563.c LARGE OMF2 ROM(D16M) BROWSE INTVECTOR(0X6020) INCD
                    -IR(..\SRC\cpu\;..\SRC\ethernet\;..\SRC\swdma\;..\SRC\mstimer\;..\SRC\uart\;..\SRC\main\;..\SRC\tcpip\;..\SRC\hsur\;..\SR
                    -C\debug\;..\SRC\dhcp\;..\SRC\dns\;..\SRC\adapter\;..\SRC\pppoe\;..\SRC\management;..\SRC\i2c\;..\SRC\flash\;..\SRC\buffe
                    -r\;..\SRC\onewire\;..\SRC\http\;..\SRC\web\;..\SRC\AX110xx_SNTP_v100;..\Src\FreeRTOSSource\portable\Keil\AX11000\;..\Src
                    -\FreeRTOSSource\include\;..\Src\schedule\) DEFINE(KEIL_AX11000) VARBANKING DEBUG PRINT(.\8563.lst) OBJECT(.\8563.obj)

line level    source

   1          #include        <stdio.h>
   2          #include        "reg80390.h"
   3          #include        "types.h"
   4          #include        "buffer.h"
   5          #include        "i2c.h"
   6          #include        "i2capi.h"
   7          #include    "8563.h"
   8          
   9          STR_CLK Time;
  10          extern U8_T  far Para[400]; 
  11          
  12          
  13          U8_T BcdToHex(U8_T byte)  
  14          {
  15   1              U8_T i,j;                 
  16   1          i = byte >> 4;
  17   1              j = byte & 0x0f;     
  18   1              return i*10+j;
  19   1      }
  20          
  21          
  22          U8_T HexToBcd(U8_T byte)
  23          {
  24   1              U8_T i,j;
  25   1              i = byte / 10;
  26   1              j = byte % 10;
  27   1              return  (i << 4) + j ;
  28   1      }
  29          
  30          
  31          U8_T Set_Clock(U8_T addr,U8_T dat)
  32          {
  33   1              U8_T  result;
  34   1              U16_T  i;
  35   1              result = I2C_ByteWrite(0x51, addr, HexToBcd(dat), I2C_STOP_COND);
  36   1              for(i = 0; i < 2500; i++)       ;
  37   1              return result;
  38   1      }
  39          
  40          
  41          
  42          
  43          void Initial_Clock(void)
  44          {
  45   1              //U16_T i;
  46   1      
  47   1              Set_Clock(0,0);
  48   1              //for(i=0;i<500;i++);
  49   1              Set_Clock(1,0);
  50   1              //for(i=0;i<500;i++);
  51   1              Set_Clock(2,Time.UN.Setime[7]); //sec
C51 COMPILER V9.06   8563                                                                  03/13/2013 09:32:25 PAGE 2   

  52   1              //for(i=0;i<500;i++);
  53   1              Set_Clock(3,Time.UN.Setime[6]);//min
  54   1              //for(i=0;i<500;i++);
  55   1              Set_Clock(4,Time.UN.Setime[5]);//hour
  56   1              //for(i=0;i<300;i++);
  57   1              Set_Clock(5,Time.UN.Setime[4]);//day
  58   1              //for(i=0;i<300;i++);
  59   1              Set_Clock(6,Time.UN.Setime[3]);//which
  60   1              //for(i=0;i<300;i++);
  61   1              Set_Clock(7,Time.UN.Setime[2]);//month
  62   1              //for(i=0;i<300;i++);
  63   1              Set_Clock(8,Time.UN.Setime[1]);//year
  64   1      }
  65          
  66          U8_T Read_Clock(U8_T regaddr)
  67          {
  68   1              U8_T i, temp[7];
  69   1              I2C_BUF Read_Dat;  
  70   1              
  71   1              I2C_RdmRead(0x51, regaddr, &Read_Dat, 7, I2C_STOP_COND);
  72   1              
  73   1              for(i = 0; i < 7; i++)
  74   1                      temp[i] = Read_Dat.I2cData[i];
  75   1              
  76   1              if(temp[5] & 0x80)
  77   1                      Time.UN.Current.centary = 19;
  78   1              else
  79   1                      Time.UN.Current.centary = 20;
  80   1              
  81   1              temp[0] = temp[0] & 0x7f;//sec
  82   1              temp[1] = temp[1] & 0x7f;//min
  83   1              temp[2] = temp[2] & 0x3f;//hour
  84   1              temp[3] = temp[3] & 0x3f;//day
  85   1              temp[4] = temp[4] & 0x07;//day of week
  86   1              temp[5] = temp[5] & 0x1f; //month
  87   1              temp[6] = temp[6] & 0xff; //month
  88   1              
  89   1              Time.UN.Current.sec = BcdToHex(temp[0]);//  Para[407]= 
  90   1              Time.UN.Current.min = BcdToHex(temp[1]);// Para[406]= 
  91   1              Time.UN.Current.hour = BcdToHex(temp[2]);// Para[405]= 
  92   1              Time.UN.Current.day = BcdToHex(temp[3]);// Para[404]= 
  93   1              Time.UN.Current.dayofweek = BcdToHex(temp[4]);// Para[403]= 
  94   1              Time.UN.Current.month = BcdToHex(temp[5]);// Para[402]= 
  95   1              Time.UN.Current.year = BcdToHex(temp[6]);// Para[401]= 
  96   1      //      Time.UN.Current.centary   = 20;                // Para[400]= 
  97   1              
  98   1              return 1;
  99   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    416    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      8      77
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
C51 COMPILER V9.06   8563                                                                  03/13/2013 09:32:25 PAGE 3   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
