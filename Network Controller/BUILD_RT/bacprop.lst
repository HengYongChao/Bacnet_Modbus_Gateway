C51 COMPILER V9.06   BACPROP                                                               03/29/2013 16:57:09 PAGE 1   


C51 COMPILER V9.06, COMPILATION OF MODULE BACPROP
OBJECT MODULE PLACED IN .\bacprop.obj
COMPILER INVOKED BY: d:\Keil_4_9.06\C51\BIN\C51.EXE ..\src\bacnet\bacprop.c LARGE OMF2 ROM(D16M) BROWSE INTVECTOR(0X6020
                    -) INCDIR(..\SRC\cpu\;..\SRC\ethernet\;..\SRC\swdma\;..\SRC\mstimer\;..\SRC\uart\;..\SRC\main\;..\SRC\tcpip\;..\SRC\hsur\
                    -;..\SRC\debug\;..\SRC\dhcp\;..\SRC\dns\;..\SRC\adapter\;..\SRC\pppoe\;..\SRC\management;..\SRC\i2c\;..\SRC\flash\;..\SRC
                    -\buffer\;..\SRC\onewire\;..\SRC\http\;..\SRC\web\;..\SRC\AX110xx_SNTP_v100;..\Src\FreeRTOSSource\portable\Keil\AX11000\;
                    -..\Src\FreeRTOSSource\include\;..\Src\schedule\;..\src\bacnet;..\src\include;..\src\LCD;..\src\version) DEFINE(KEIL_AX11
                    -000) VARBANKING DEBUG PRINT(.\bacprop.lst) OBJECT(.\bacprop.obj)

line level    source

   1          /*####COPYRIGHTBEGIN####
   2           -------------------------------------------
   3           Copyright (C) 2005 John Goulah
   4          
   5           This program is free software; you can redistribute it and/or
   6           modify it under the terms of the GNU General Public License
   7           as published by the Free Software Foundation; either version 2
   8           of the License, or (at your option) any later version.
   9          
  10           This program is distributed in the hope that it will be useful,
  11           but WITHOUT ANY WARRANTY; without even the implied warranty of
  12           MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13           GNU General Public License for more details.
  14          
  15           You should have received a copy of the GNU General Public License
  16           along with this program; if not, write to 
  17           The Free Software Foundation, Inc.
  18           59 Temple Place - Suite 330 
  19           Boston, MA  02111-1307, USA.
  20          
  21           As a special exception, if other files instantiate templates or
  22           use macros or inline functions from this file, or you compile
  23           this file and link it with other works to produce a work based
  24           on this file, this file does not by itself cause the resulting
  25           work to be covered by the GNU General Public License. However
  26           the source code for this file must still be made available in
  27           accordance with section (3) of the GNU General Public License.
  28          
  29           This exception does not invalidate any other reasons why a work
  30           based on this file might be covered by the GNU General Public
  31           License.
  32           -------------------------------------------
  33          ####COPYRIGHTEND####*/
  34          #include <stdbool.h>
  35          #include <string.h>
  36          //#if PRINT_ENABLED
  37          //#include <stdio.h>
  38          //#endif
  39          #include "../include/bacprop.h"
  40          
  41          /** @file bacprop.c  Lookup BACnet Property Tags */
  42          
  43          PROP_TAG_DATA bacnet_object_device_property_tag_map[] = {
  44              {PROP_OBJECT_IDENTIFIER, BACNET_APPLICATION_TAG_OBJECT_ID}
  45              ,
  46              {PROP_OBJECT_NAME, BACNET_APPLICATION_TAG_CHARACTER_STRING}
  47              ,
  48              {PROP_OBJECT_TYPE, BACNET_APPLICATION_TAG_ENUMERATED}
  49              ,
  50              {PROP_SYSTEM_STATUS, BACNET_APPLICATION_TAG_ENUMERATED}
C51 COMPILER V9.06   BACPROP                                                               03/29/2013 16:57:09 PAGE 2   

  51              ,
  52              {PROP_VENDOR_NAME, BACNET_APPLICATION_TAG_CHARACTER_STRING}
  53              ,
  54              {PROP_VENDOR_IDENTIFIER, BACNET_APPLICATION_TAG_UNSIGNED_INT}
  55              ,
  56              {PROP_MODEL_NAME, BACNET_APPLICATION_TAG_CHARACTER_STRING}
  57              ,
  58              {PROP_FIRMWARE_REVISION, BACNET_APPLICATION_TAG_CHARACTER_STRING}
  59              ,
  60              {PROP_APPLICATION_SOFTWARE_VERSION,
  61                  BACNET_APPLICATION_TAG_CHARACTER_STRING}
  62              ,
  63              {PROP_PROTOCOL_VERSION, BACNET_APPLICATION_TAG_UNSIGNED_INT}
  64              ,
  65              {PROP_PROTOCOL_CONFORMANCE_CLASS, BACNET_APPLICATION_TAG_UNSIGNED_INT}
  66              ,
  67              {PROP_PROTOCOL_SERVICES_SUPPORTED, BACNET_APPLICATION_TAG_BIT_STRING}
  68              ,
  69              {PROP_PROTOCOL_OBJECT_TYPES_SUPPORTED,
  70                  BACNET_APPLICATION_TAG_BIT_STRING}
  71              ,
  72              {PROP_MAX_APDU_LENGTH_ACCEPTED, BACNET_APPLICATION_TAG_UNSIGNED_INT}
  73              ,
  74              {PROP_SEGMENTATION_SUPPORTED, BACNET_APPLICATION_TAG_ENUMERATED}
  75              ,
  76              {PROP_APDU_TIMEOUT, BACNET_APPLICATION_TAG_UNSIGNED_INT}
  77              ,
  78              {PROP_NUMBER_OF_APDU_RETRIES, BACNET_APPLICATION_TAG_UNSIGNED_INT}
  79              ,
  80              {-1, -1}
  81          };
  82          
  83          signed bacprop_tag_by_index_default(
  84              PROP_TAG_DATA * data_list,
  85              signed index,
  86              signed default_ret)
  87          {
  88   1          signed pUnsigned = 0;
  89   1      
  90   1          if (data_list) {
  91   2              while (data_list->prop_id != -1) {
  92   3                  if (data_list->prop_id == index) {
  93   4                      pUnsigned = data_list->tag_id;
  94   4                      break;
  95   4                  }
  96   3                  data_list++;
  97   3              }
  98   2          }
  99   1      
 100   1          return pUnsigned ? pUnsigned : default_ret;
 101   1      }
 102          
 103          
 104          signed bacprop_property_tag(
 105              BACNET_OBJECT_TYPE type,
 106              signed prop)
 107          {
 108   1          switch (type) {
 109   2              case OBJECT_DEVICE:
 110   2                  return
 111   2                      bacprop_tag_by_index_default
 112   2                      (bacnet_object_device_property_tag_map, prop, -1);
C51 COMPILER V9.06   BACPROP                                                               03/29/2013 16:57:09 PAGE 3   

 113   2              default:
 114   2      //#if PRINT_ENABLED
 115   2      //            fprintf(stderr, "Unsupported object type");
 116   2      //#endif
 117   2                  break;
 118   2          }
 119   1      
 120   1          return -1;
 121   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    153    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     72       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
