C51 COMPILER V9.06   DATALINK                                                              03/29/2013 16:57:09 PAGE 1   


C51 COMPILER V9.06, COMPILATION OF MODULE DATALINK
OBJECT MODULE PLACED IN .\datalink.obj
COMPILER INVOKED BY: d:\Keil_4_9.06\C51\BIN\C51.EXE ..\src\bacnet\datalink.c LARGE OMF2 ROM(D16M) BROWSE INTVECTOR(0X602
                    -0) INCDIR(..\SRC\cpu\;..\SRC\ethernet\;..\SRC\swdma\;..\SRC\mstimer\;..\SRC\uart\;..\SRC\main\;..\SRC\tcpip\;..\SRC\hsur
                    -\;..\SRC\debug\;..\SRC\dhcp\;..\SRC\dns\;..\SRC\adapter\;..\SRC\pppoe\;..\SRC\management;..\SRC\i2c\;..\SRC\flash\;..\SR
                    -C\buffer\;..\SRC\onewire\;..\SRC\http\;..\SRC\web\;..\SRC\AX110xx_SNTP_v100;..\Src\FreeRTOSSource\portable\Keil\AX11000\
                    -;..\Src\FreeRTOSSource\include\;..\Src\schedule\;..\src\bacnet;..\src\include;..\src\LCD;..\src\version) DEFINE(KEIL_AX1
                    -1000) VARBANKING DEBUG PRINT(.\datalink.lst) OBJECT(.\datalink.obj)

line level    source

   1          /*####COPYRIGHTBEGIN####
   2           -------------------------------------------
   3           Copyright (C) 2007 Steve Karg
   4          
   5           This program is free software; you can redistribute it and/or
   6           modify it under the terms of the GNU General Public License
   7           as published by the Free Software Foundation; either version 2
   8           of the License, or (at your option) any later version.
   9          
  10           This program is distributed in the hope that it will be useful,
  11           but WITHOUT ANY WARRANTY; without even the implied warranty of
  12           MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13           GNU General Public License for more details.
  14          
  15           You should have received a copy of the GNU General Public License
  16           along with this program; if not, write to:
  17           The Free Software Foundation, Inc.
  18           59 Temple Place - Suite 330
  19           Boston, MA  02111-1307, USA.
  20          
  21           As a special exception, if other files instantiate templates or
  22           use macros or inline functions from this file, or you compile
  23           this file and link it with other works to produce a work based
  24           on this file, this file does not by itself cause the resulting
  25           work to be covered by the GNU General Public License. However
  26           the source code for this file must still be made available in
  27           accordance with section (3) of the GNU General Public License.
  28          
  29           This exception does not invalidate any other reasons why a work
  30           based on this file might be covered by the GNU General Public
  31           License.
  32           -------------------------------------------
  33          ####COPYRIGHTEND####*/
  34          #include "../include/datalink.h"
  35          #include <string.h>
  36          
  37          /** @file datalink.c  Optional run-time assignment of datalink transport */
  38          
  39          #if defined(BACDL_ALL) || defined FOR_DOXYGEN
              /* Function pointers - point to your datalink */
              
              /** Function template to Initialize the DataLink services at the given interface.
               * @ingroup DLTemplates
               * 
               * @note For Linux, ifname is eth0, ath0, arc0, ttyS0, and others.
                       For Windows, ifname is the COM port or dotted ip address of the interface.
                       
               * @param ifname [in] The named interface to use for the network layer.
               * @return True if the interface is successfully initialized,
               *         else False if the initialization fails.
C51 COMPILER V9.06   DATALINK                                                              03/29/2013 16:57:09 PAGE 2   

               */
              bool(*datalink_init) (char *ifname);
              
              /** Function template to send a packet via the DataLink.
               * @ingroup DLTemplates
               *
               * @param dest [in] Destination address.
               * @param npdu_data [in] The NPDU header (Network) information.
               * @param pdu [in] Buffer of data to be sent - may be null.
               * @param pdu_len [in] Number of bytes in the pdu buffer.
               * @return Number of bytes sent on success, negative number on failure.
               */
              int (
                  *datalink_send_pdu) (
                  BACNET_ADDRESS * dest,
                  BACNET_NPDU_DATA * npdu_data,
                  uint8_t * pdu,
                  unsigned pdu_len);
              
              uint16_t(*datalink_receive) (BACNET_ADDRESS * src, uint8_t * pdu,
                  uint16_t max_pdu, unsigned timeout);
              
              /** Function template to close the DataLink services and perform any cleanup.
               * @ingroup DLTemplates
               */
              void (
                  *datalink_cleanup) (
                  void);
              
              void (
                  *datalink_get_broadcast_address) (
                  BACNET_ADDRESS * dest);
              
              void (
                  *datalink_get_my_address) (
                  BACNET_ADDRESS * my_address);
              
              void datalink_set(
                  char *datalink_string)
              {
                  if (strcasecmp("bip", datalink_string) == 0) {
                      datalink_init = bip_init;
                      datalink_send_pdu = bip_send_pdu;
                      datalink_receive = bip_receive;
                      datalink_cleanup = bip_cleanup;
                      datalink_get_broadcast_address = bip_get_broadcast_address;
                      datalink_get_my_address = bip_get_my_address;
                  } else if (strcasecmp("ethernet", datalink_string) == 0) {
                      datalink_init = ethernet_init;
                      datalink_send_pdu = ethernet_send_pdu;
                      datalink_receive = ethernet_receive;
                      datalink_cleanup = ethernet_cleanup;
                      datalink_get_broadcast_address = ethernet_get_broadcast_address;
                      datalink_get_my_address = ethernet_get_my_address;
                  } else if (strcasecmp("arcnet", datalink_string) == 0) {
                      datalink_init = arcnet_init;
                      datalink_send_pdu = arcnet_send_pdu;
                      datalink_receive = arcnet_receive;
                      datalink_cleanup = arcnet_cleanup;
                      datalink_get_broadcast_address = arcnet_get_broadcast_address;
                      datalink_get_my_address = arcnet_get_my_address;
                  } else if (strcasecmp("mstp", datalink_string) == 0) {
C51 COMPILER V9.06   DATALINK                                                              03/29/2013 16:57:09 PAGE 3   

                      datalink_init = dlmstp_init;
                      datalink_send_pdu = dlmstp_send_pdu;
                      datalink_receive = dlmstp_receive;
                      datalink_cleanup = dlmstp_cleanup;
                      datalink_get_broadcast_address = dlmstp_get_broadcast_address;
                      datalink_get_my_address = dlmstp_get_my_address;
                  }
              }
              #endif
 122          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
