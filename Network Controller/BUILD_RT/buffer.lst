C51 COMPILER V9.06   BUFFER                                                                05/28/2013 10:15:31 PAGE 1   


C51 COMPILER V9.06, COMPILATION OF MODULE BUFFER
OBJECT MODULE PLACED IN .\buffer.obj
COMPILER INVOKED BY: E:\Keil_4_9.06\C51\BIN\C51.EXE ..\src\buffer\buffer.c LARGE OMF2 ROM(D16M) BROWSE INTVECTOR(0X6020)
                    - INCDIR(..\SRC\cpu\;..\SRC\ethernet\;..\SRC\swdma\;..\SRC\mstimer\;..\SRC\uart\;..\SRC\main\;..\SRC\tcpip\;..\SRC\hsur\;
                    -..\SRC\debug\;..\SRC\dhcp\;..\SRC\dns\;..\SRC\adapter\;..\SRC\pppoe\;..\SRC\management;..\SRC\i2c\;..\SRC\flash\;..\SRC\
                    -buffer\;..\SRC\onewire\;..\SRC\http\;..\SRC\web\;..\SRC\AX110xx_SNTP_v100;..\Src\FreeRTOSSource\portable\Keil\AX11000\;.
                    -.\Src\FreeRTOSSource\include\;..\Src\schedule\;..\src\bacnet;..\src\include;..\src\LCD;..\src\version;..\src\modbusTCP;.
                    -.\src\gs2e;..\src\adpter1;..\src\scan;..\src\gsm;..\src\dyndns) DEFINE(KEIL_AX11000) VARBANKING DEBUG PRINT(.\buffer.lst
                    -) OBJECT(.\buffer.obj)

line level    source

   1          /*
   2           *********************************************************************************
   3           *     Copyright (c) 2005       ASIX Electronic Corporation      All rights reserved.
   4           *
   5           *     This is unpublished proprietary source code of ASIX Electronic Corporation
   6           *
   7           *     The copyright notice above does not evidence any actual or intended
   8           *     publication of such source code.
   9           *********************************************************************************
  10           */
  11          /*================================================================================
  12           * Module Name : buffer.c
  13           * Purpose     : This module handles the buffer memory allocation and release.
  14           * Author      : Robin Lee
  15           * Date        : 2005-03-31
  16           * Notes       :
  17           * $Log: buffer.c,v $
  18           * Revision 1.3  2005/11/24 12:48:16  robin6633
  19           * initiate values of use.
  20           *
  21           * Revision 1.2  2005/06/14 02:49:12  arthur
  22           * changed interrupt.h include
  23           *
  24           * Revision 1.1  2005/06/14 02:05:53  arthur
  25           * move directory
  26           *
  27           * Revision 1.1.1.1  2005/06/06 05:55:57  robin6633
  28           * no message
  29           *
  30           *================================================================================
  31           */
  32          
  33          /* INCLUDE FILE DECLARATIONS */
  34          #include        "types.h"
  35          #include        "buffer.h"
  36          
  37          
  38          /* STATIC VARIABLE DECLARATIONS */
  39          static U8_T                     bufcount = 0;
  40          static SI_BUF_PAGE      sipagebuf[TOTAL_BUF_NUM];
  41          
  42          
  43          /* LOCAL SUBPROGRAM DECLARATIONS */
  44          
  45          
  46          /* LOCAL SUBPROGRAM BODIES */
  47          
  48          
  49          /* EXPORTED SUBPROGRAM BODIES */
C51 COMPILER V9.06   BUFFER                                                                05/28/2013 10:15:31 PAGE 2   

  50          
  51          /*
  52           *--------------------------------------------------------------------------------
  53           * SI_BUF_PAGE *GetPktBuf(void)
  54           * Purpose : allocate a buffer for serial interface
  55           * Params  :
  56           * Returns : ptpktbuf - pointer of buffer allocated
  57           * Note    : this buffer pool is a ring buffer
  58           *--------------------------------------------------------------------------------
  59           */
  60          SI_BUF_PAGE *GetPktBuf(void)
  61          {
  62   1              SI_BUF_PAGE     *ptpktbuf = NULL;
  63   1              U8_T            i = 0;
  64   1      
  65   1              for (i=0 ; i<PAGE_BUF_SIZE ; i++)
  66   1              {
  67   2                      sipagebuf[bufcount].bufpage[i] = 0;
  68   2              }
  69   1              ptpktbuf = &sipagebuf[bufcount];
  70   1              bufcount ++;
  71   1              if (bufcount == TOTAL_BUF_NUM)
  72   1              {
  73   2                      bufcount = 0;
  74   2              }
  75   1              return ptpktbuf;
  76   1      }
  77          
  78          
  79          /* End of buffer.c */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     76    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   2740    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
